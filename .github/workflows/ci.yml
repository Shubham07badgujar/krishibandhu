name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install Backend Dependencies
      run: |
        cd server
        npm install
    
    - name: Install Frontend Dependencies
      run: |
        cd krishibandhu-client
        npm install
    
    - name: Lint Frontend Code
      run: |
        cd krishibandhu-client
        npm run lint || echo "Linting completed with warnings"
    
    - name: Build Frontend
      run: |
        cd krishibandhu-client
        npm run build
      env:
        VITE_BACKEND_URL: http://localhost:5001
        VITE_GOOGLE_CLIENT_ID: test-client-id
    
    - name: Test Backend (if tests exist)
      run: |
        cd server
        if [ -f "package.json" ] && grep -q '"test"' package.json; then
          npm test || echo "Backend tests failed or not configured"
        else
          echo "No backend tests found"
        fi
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: build-artifacts
        path: |
          krishibandhu-client/dist
        retention-days: 30

  deploy:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Dependencies
      run: |
        cd server && npm install
        cd ../krishibandhu-client && npm install
    
    - name: Build Frontend
      run: |
        cd krishibandhu-client
        npm run build
      env:
        VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
        VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
    
    - name: Deploy Backend to Vercel (if configured)
      if: secrets.VERCEL_TOKEN
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID_BACKEND }}
        working-directory: ./server
        vercel-args: '--prod'
    
    - name: Deploy Frontend to Vercel (if configured)
      if: secrets.VERCEL_TOKEN
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID_FRONTEND }}
        working-directory: ./krishibandhu-client
        vercel-args: '--prod'
